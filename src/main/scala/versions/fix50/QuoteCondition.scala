package com.miriamlaurel.wontfix.versions.fix50

import com.miriamlaurel.wontfix.types
import com.miriamlaurel.wontfix.structure._

case class QuoteCondition(strings: String*) extends FixField(276, types.MultipleStringValue(strings: _*))

object QuoteCondition {
  val OPEN_ACTIVE = QuoteCondition("A")
  val CLOSED_INACTIVE = QuoteCondition("B")
  val EXCHANGE_BEST = QuoteCondition("C")
  val CONSOLIDATED_BEST = QuoteCondition("D")
  val LOCKED = QuoteCondition("E")
  val CROSSED = QuoteCondition("F")
  val DEPTH = QuoteCondition("G")
  val FAST_TRADING = QuoteCondition("H")
  val NON_FIRM = QuoteCondition("I")
  val MANUAL_SLOW_QUOTE = QuoteCondition("L")
  val OUTRIGHT_PRICE = QuoteCondition("J")
  val IMPLIED_PRICE = QuoteCondition("K")
  val DEPTH_ON_OFFER = QuoteCondition("M")
  val DEPTH_ON_BID = QuoteCondition("N")
  val CLOSING = QuoteCondition("O")
  val NEWS_DISSEMINATION = QuoteCondition("P")
  val TRADING_RANGE = QuoteCondition("Q")
  val ORDER_INFLUX = QuoteCondition("R")
  val DUE_TO_RELATED = QuoteCondition("S")
  val NEWS_PENDING = QuoteCondition("T")
  val ADDITIONAL_INFO = QuoteCondition("U")
  val ADDITIONAL_INFO_DUE_TO_RELATED = QuoteCondition("V")
  val RESUME = QuoteCondition("W")
  val VIEW_OF_COMMON = QuoteCondition("X")
  val VOLUME_ALERT = QuoteCondition("Y")
  val ORDER_IMBALANCE = QuoteCondition("Z")
  val EQUIPMENT_CHANGEOVER = QuoteCondition("a")
  val NO_OPEN = QuoteCondition("b")
  val REGULAR_ETH = QuoteCondition("c")
  val AUTOMATIC_EXECUTION = QuoteCondition("d")
  val AUTOMATIC_EXECUTION_ETH = QuoteCondition("e")
  val FAST_MARKET_ETH = QuoteCondition("f")
  val INACTIVE_ETH = QuoteCondition("g")
  val ROTATION = QuoteCondition("h")
  val ROTATION_ETH = QuoteCondition("i")
  val HALT = QuoteCondition("j")
  val HALT_ETH = QuoteCondition("k")
  val DUE_TO_NEWS_DISSEMINATION = QuoteCondition("l")
  val DUE_TO_NEWS_PENDING = QuoteCondition("m")
  val TRADING_RESUME = QuoteCondition("n")
  val OUT_OF_SEQUENCE = QuoteCondition("o")
  val BID_SPECIALIST = QuoteCondition("p")
  val OFFER_SPECIALIST = QuoteCondition("q")
  val BID_OFFER_SPECIALIST = QuoteCondition("r")
  val END_OF_DAY_SAM = QuoteCondition("s")
  val FORBIDDEN_SAM = QuoteCondition("t")
  val FROZEN_SAM = QuoteCondition("u")
  val PREOPENING_SAM = QuoteCondition("v")
  val OPENING_SAM = QuoteCondition("w")
  val OPEN_SAM = QuoteCondition("x")
  val SURVEILLANCE_SAM = QuoteCondition("y")
  val SUSPENDED_SAM = QuoteCondition("z")
  val RESERVED_SAM = QuoteCondition("0")
  val NO_ACTIVE_SAM = QuoteCondition("1")
  val RESTRICTED = QuoteCondition("2")
  val NO_MARKET_ACTIVITY = QuoteCondition("1000")
  val NO_DATA_AVAILABLE = QuoteCondition("1001")
  val NOT_APPLICABLE = QuoteCondition("1002")
  val AMOUNT_THRESHOLD_EXCEEDED = QuoteCondition("1003")
}