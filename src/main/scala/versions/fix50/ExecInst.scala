package com.miriamlaurel.wontfix.versions.fix50

import com.miriamlaurel.wontfix.types
import com.miriamlaurel.wontfix.structure._

case class ExecInst(chars: Char*) extends FixField(18, types.MultipleCharValue(chars: _*))

object ExecInst {
  val STAY_ON_OFFERSIDE = ExecInst('0')
  val NOT_HELD = ExecInst('1')
  val WORK = ExecInst('2')
  val GO_ALONG = ExecInst('3')
  val OVER_THE_DAY = ExecInst('4')
  val HELD = ExecInst('5')
  val PARTICIPATE_DONT_INITIATE = ExecInst('6')
  val STRICT_SCALE = ExecInst('7')
  val TRY_TO_SCALE = ExecInst('8')
  val STAY_ON_BIDSIDE = ExecInst('9')
  val NO_CROSS = ExecInst('A')
  val OK_TO_CROSS = ExecInst('B')
  val CALL_FIRST = ExecInst('C')
  val PERCENT_OF_VOLUME = ExecInst('D')
  val DO_NOT_INCREASE = ExecInst('E')
  val DO_NOT_REDUCE = ExecInst('F')
  val ALL_OR_NONE = ExecInst('G')
  val REINSTATE_ON_SYSTEM_FAILURE = ExecInst('H')
  val INSTITUTIONS_ONLY = ExecInst('I')
  val REINSTATE_ON_TRADING_HALT = ExecInst('J')
  val CANCEL_ON_TRADING_HALT = ExecInst('K')
  val LAST_PEG = ExecInst('L')
  val MID_PRICE = ExecInst('M')
  val NON_NEGOTIABLE = ExecInst('N')
  val OPENING_PEG = ExecInst('O')
  val MARKET_PEG = ExecInst('P')
  val CANCEL_ON_SYSTEM_FAILURE = ExecInst('Q')
  val PRIMARY_PEG = ExecInst('R')
  val SUSPEND = ExecInst('S')
  val FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER = ExecInst('T')
  val CUSTOMER_DISPLAY_INSTRUCTION = ExecInst('U')
  val NETTING = ExecInst('V')
  val PEG_TO_VWAP = ExecInst('W')
  val TRADE_ALONG = ExecInst('X')
  val TRY_TO_STOP = ExecInst('Y')
  val CANCEL_IF_NOT_BEST = ExecInst('Z')
  val TRAILING_STOP_PEG = ExecInst('a')
  val STRICT_LIMIT = ExecInst('b')
  val IGNORE_PRICE_VALIDITY_CHECKS = ExecInst('c')
  val PEG_TO_LIMIT_PRICE = ExecInst('d')
  val WORK_TO_TARGET_STRATEGY = ExecInst('e')
  val INTERMARKET_SWEEP = ExecInst('f')
  val EXTERNAL_ROUTING_ALLOWED = ExecInst('g')
  val EXTERNAL_ROUTING_NOT_ALLOWED = ExecInst('h')
  val IMBALANCE_ONLY = ExecInst('i')
  val SINGLE_EXECUTION_REQUESTED_FOR_BLOCK_TRADE = ExecInst('j')
  val BEST_EXECUTION = ExecInst('k')
}