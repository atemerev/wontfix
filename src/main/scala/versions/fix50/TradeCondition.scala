package com.miriamlaurel.wontfix.versions.fix50

import com.miriamlaurel.wontfix.types
import com.miriamlaurel.wontfix.structure._

case class TradeCondition(strings: String*) extends FixField(277, types.MultipleStringValue(strings: _*))

object TradeCondition {
  val CASH_MARKET = TradeCondition("A")
  val AVERAGE_PRICE_TRADE = TradeCondition("B")
  val CASH_TRADE = TradeCondition("C")
  val NEXT_DAY_MARKET = TradeCondition("D")
  val OPENING_REOPENING_TRADE_DETAIL = TradeCondition("E")
  val INTRADAY_TRADE_DETAIL = TradeCondition("F")
  val RULE127 = TradeCondition("G")
  val RULE155 = TradeCondition("H")
  val SOLD_LAST = TradeCondition("I")
  val NEXT_DAY_TRADE = TradeCondition("J")
  val OPENED = TradeCondition("K")
  val SELLER = TradeCondition("L")
  val SOLD = TradeCondition("M")
  val STOPPED_STOCK = TradeCondition("N")
  val IMBALANCE_MORE_BUYERS = TradeCondition("P")
  val IMBALANCE_MORE_SELLERS = TradeCondition("Q")
  val OPENING_PRICE = TradeCondition("R")
  val TRADES_RESULTING_FROM_MANUAL_SLOW_QUOTE = TradeCondition("Y")
  val TRADES_RESULTING_FROM_INTERMARKET_SWEEP = TradeCondition("Z")
  val BARGAIN_CONDITION = TradeCondition("S")
  val CONVERTED_PRICE_INDICATOR = TradeCondition("T")
  val EXCHANGE_LAST = TradeCondition("U")
  val FINAL_PRICE_OF_SESSION = TradeCondition("V")
  val EX_PIT = TradeCondition("W")
  val CROSSED = TradeCondition("X")
  val CANCEL = TradeCondition("0")
  val VOLUME_ONLY = TradeCondition("a")
  val DIRECT_PLUS = TradeCondition("b")
  val ACQUISITION = TradeCondition("c")
  val BUNCHED = TradeCondition("d")
  val DISTRIBUTION = TradeCondition("e")
  val BUNCHED_SALE = TradeCondition("f")
  val SPLIT_TRADE = TradeCondition("g")
  val CANCEL_STOPPED = TradeCondition("h")
  val CANCEL_ETH = TradeCondition("i")
  val CANCEL_STOPPED_ETH = TradeCondition("j")
  val OUT_OF_SEQUENCE_ETH = TradeCondition("k")
  val CANCEL_LAST_ETH = TradeCondition("l")
  val SOLD_LAST_SALE_ETH = TradeCondition("m")
  val CANCEL_LAST = TradeCondition("n")
  val SOLD_LAST_SALE = TradeCondition("o")
  val CANCEL_OPEN = TradeCondition("p")
  val CANCEL_OPEN_ETH = TradeCondition("q")
  val OPENED_SALE_ETH = TradeCondition("r")
  val CANCEL_ONLY = TradeCondition("s")
  val CANCEL_ONLY_ETH = TradeCondition("t")
  val LATE_OPEN_ETH = TradeCondition("u")
  val AUTO_EXECUTION_ETH = TradeCondition("v")
  val REOPEN = TradeCondition("w")
  val REOPEN_ETH = TradeCondition("x")
  val ADJUSTED = TradeCondition("y")
  val ADJUSTED_ETH = TradeCondition("z")
  val SPREAD = TradeCondition("AA")
  val SPREAD_ETH = TradeCondition("AB")
  val STRADDLE = TradeCondition("AC")
  val STRADDLE_ETH = TradeCondition("AD")
  val STOPPED = TradeCondition("AE")
  val STOPPED_ETH = TradeCondition("AF")
  val REGULAR_ETH = TradeCondition("AG")
  val COMBO = TradeCondition("AH")
  val COMBO_ETH = TradeCondition("AI")
  val OFFICIAL_CLOSING_PRICE = TradeCondition("AJ")
  val PRIOR_REFERENCE_PRICE = TradeCondition("AK")
  val STOPPED_SOLD_LAST = TradeCondition("AL")
  val STOPPED_OUT_OF_SEQUENCE = TradeCondition("AM")
  val OFFICAL_CLOSING_PRICE = TradeCondition("AN")
  val CROSSED2 = TradeCondition("AO")
  val FAST_MARKET = TradeCondition("AP")
  val AUTOMATIC_EXECUTION = TradeCondition("AQ")
  val FORM_T = TradeCondition("AR")
  val BASKET_INDEX = TradeCondition("AS")
  val BURST_BASKET = TradeCondition("AT")
  val NO_MARKET_ACTIVITY = TradeCondition("1000")
  val NO_DATA_AVAILABLE = TradeCondition("1001")
  val NOT_APPLICABLE = TradeCondition("1002")
}